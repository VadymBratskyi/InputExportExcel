using AutoGenerateData.Generator.Base;
using EFCore.BulkExtensions;
using AutoGenerateData.Models.Db;
using AutoGenerateData.Models.Interface;
using Bogus;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System;

namespace AutoGenerateData.Generator
{
	public class GenerateItems
	{
		private Faker _faker;
		private GenerateDbContext _db;
		private List<IEntity> _listEntity;
		private int _count;

		private const int MaxInChunk = 300;
		
		public event Action<int> Notify;

		public GenerateItems(int countItems, GenerateDbContext db) {
			_faker = new Faker("ru");
			_count = countItems;
			_db = db;		
			_listEntity = new List<IEntity>();
		}

		public GenerateItems(int countItems)
		{
			_faker = new Faker("ru");
			_count = countItems;
			_listEntity = new List<IEntity>();
		}

		public List<IEntity> GetEntiesList()
		{
			return _listEntity;
		}

		public void RunGenerator(Creator creteEntity, bool saveToDb = true) {

			Creator creator = creteEntity;

			for (var i = 0; i < _count; i++)
			{
				if (_listEntity.Count == MaxInChunk && saveToDb) {
					BulkToDb();
				}
				
				var entity = creator.FactoryMethod(_faker);
				_listEntity.Add(entity);
				
			}

			if (_listEntity.Any() && saveToDb)
			{
				BulkToDb();
			}

			_db.SaveChanges();
		}

		private void BulkToDb()
		{

			if (_listEntity.Any())
			{
				_db.BulkInsert(_listEntity);
				Notify?.Invoke(_listEntity.Count);
				_listEntity.Clear();
			}

		}



	}
}
